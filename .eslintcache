[{"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\index.js":"1","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\reportWebVitals.js":"2","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\App.js":"3","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\FireBase\\Firebase.js":"4","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\index.js":"5","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\index.js":"6","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\index.js":"7","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\index.js":"8","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\index.js":"9","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\index.js":"10","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\Footer.js":"11","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\NewGame.js":"12","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\Profile.js":"13","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\Navbar.js":"14","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\Register.js":"15","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\Login.js":"16","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\index.js":"17","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\Bar.js":"18","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\index.js":"19","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\Destacados.js":"20","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\index.js":"21","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\ProductsName.js":"22","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\index.js":"23","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\Producst.js":"24","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\index.js":"25","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\Carrito.js":"26","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\hooks\\useQuery.js":"27","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\GpuFomr\\GpuFomr.js":"28","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\CpuForm\\CpuForm.js":"29"},{"size":500,"mtime":1611827105765,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":2049,"mtime":1620719262355,"results":"33","hashOfConfig":"31"},{"size":747,"mtime":1614620958616,"results":"34","hashOfConfig":"31"},{"size":36,"mtime":1612098001347,"results":"35","hashOfConfig":"31"},{"size":33,"mtime":1612773145065,"results":"36","hashOfConfig":"31"},{"size":36,"mtime":1612098001393,"results":"37","hashOfConfig":"31"},{"size":36,"mtime":1612772778960,"results":"38","hashOfConfig":"31"},{"size":35,"mtime":1614154781712,"results":"39","hashOfConfig":"31"},{"size":35,"mtime":1614597776841,"results":"40","hashOfConfig":"31"},{"size":242,"mtime":1613040659402,"results":"41","hashOfConfig":"31"},{"size":19281,"mtime":1620722471512,"results":"42","hashOfConfig":"31"},{"size":29240,"mtime":1620727675471,"results":"43","hashOfConfig":"31"},{"size":12659,"mtime":1620652966621,"results":"44","hashOfConfig":"31"},{"size":26651,"mtime":1620729381829,"results":"45","hashOfConfig":"31"},{"size":6020,"mtime":1620729028001,"results":"46","hashOfConfig":"31"},{"size":31,"mtime":1612171032548,"results":"47","hashOfConfig":"31"},{"size":4682,"mtime":1620633960312,"results":"48","hashOfConfig":"31"},{"size":38,"mtime":1614972141450,"results":"49","hashOfConfig":"31"},{"size":5822,"mtime":1620731394947,"results":"50","hashOfConfig":"31"},{"size":40,"mtime":1615881770233,"results":"51","hashOfConfig":"31"},{"size":12393,"mtime":1620653457521,"results":"52","hashOfConfig":"31"},{"size":36,"mtime":1616089516427,"results":"53","hashOfConfig":"31"},{"size":15924,"mtime":1620730783157,"results":"54","hashOfConfig":"31"},{"size":35,"mtime":1616176253333,"results":"55","hashOfConfig":"31"},{"size":4899,"mtime":1620657014664,"results":"56","hashOfConfig":"31"},{"size":142,"mtime":1611217396000,"results":"57","hashOfConfig":"31"},{"size":7172,"mtime":1620642679314,"results":"58","hashOfConfig":"31"},{"size":7975,"mtime":1620646205016,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"17h48m7",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\index.js",[],["122","123"],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\reportWebVitals.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\App.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\FireBase\\Firebase.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\Footer.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\NewGame.js",["124","125"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './NewGame.css';\r\nimport { db } from '../FireBase/Firebase'\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from 'firebase/app';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& >*': {\r\n            margin: theme.spacing(1),\r\n\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n            color: \"white\"\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white',\r\n        },\r\n        \"& .MuiInputLabel-root\": {\r\n            color: \"rgb(184, 180, 180)\"\r\n        },\r\n        \"& .MuiInputLabel-root.Mui-focused\": {\r\n            color: \"purple\"\r\n        },\r\n\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: 'rgb(184, 180, 180)',\r\n        },\r\n\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#ac4caf',\r\n        },\r\n\r\n\r\n\r\n    },\r\n    check: {\r\n        color: \"fff\",\r\n        '&$checked': {\r\n            color: \"fff\",\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst NewGame = () => {\r\n    const classes = useStyles();\r\n\r\n    const { register, /* errors, */ handleSubmit } = useForm({});\r\n\r\n    const state = {\r\n        name: '',\r\n        nameSearch: '',\r\n        description: '',\r\n        developer: '',\r\n        date: '',\r\n        requerimentsMin: {\r\n            cpuMin: '',\r\n            cpuMin2: '',\r\n            ramMin: '',\r\n            gpuMin: '',\r\n            gpuMin2: '',\r\n        },\r\n        requerimentsMax: {\r\n            cpuMax: '',\r\n            cpuMax2: '',\r\n            ramMax: '',\r\n            gpuMax: '',\r\n            gpuMax2: '',\r\n\r\n        },\r\n        so: '',\r\n        discSpaces: '',\r\n        covePage: '',\r\n        imageArray: {\r\n\r\n        },\r\n        video: '',\r\n        plataform: '',\r\n        genders: {\r\n\r\n        },\r\n        price: 0,\r\n        promo: 0,\r\n    }\r\n\r\n\r\n    const [formState, setFormState] = useState(state);\r\n    const [genders2, setGenders2] = useState([])\r\n    const [genders, setGenders] = useState([])\r\n    const [gpu, setGpu] = useState([])\r\n    const [cpu, setCpu] = useState([])\r\n    const handleChange = event => {\r\n        setFormState({\r\n            ...formState,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const [imagens, setImagens] = useState([]);\r\n    const [imagen, setImagen] = useState();\r\n\r\n    //OBTENIENDO LA IMAGEN\r\n    const changeImagen = e => {\r\n        console.log(e.target.files[0])\r\n        setImagen(e.target.files[0]);\r\n        console.log(imagen)\r\n    }\r\n\r\n    const changeImagens = e => {\r\n        console.log(e.target.files)\r\n        setImagens(e.target.files);\r\n        console.log(imagens)\r\n    }\r\n    const onSubmit = async data => {\r\n        registro();\r\n    };\r\n\r\n    const onChangeFavorite = (event) => {\r\n        console.log(event.target.checked, event.target.value);\r\n        if (event.target.checked === true) {\r\n\r\n            setGenders(genders => [...genders, event.target.value]);\r\n            /* window.history.pushState(null, \"\", event.target.value); */\r\n        } else {\r\n            var i = genders.indexOf(event.target.value);\r\n\r\n            if (i !== -1) {\r\n                genders.splice(i, 1);\r\n            }\r\n        }\r\n        console.log(genders)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\" genders\")\r\n            .orderBy(\"name\", \"asc\").get().then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    setGenders2(genders2 => [...genders2, doc.data().name])\r\n                    /* console.log(doc.data().name) */\r\n                });\r\n            })\r\n\r\n        db.collection(\"Gpu\").get().then((querySnapshot) => {\r\n            let data = [];\r\n            querySnapshot.forEach((doc) => {\r\n\r\n                data.push({\r\n                    id: doc.id,\r\n                    name: doc.data().name\r\n                })\r\n                setGpu(data)\r\n            });\r\n            console.log(gpu)\r\n        });\r\n\r\n        db.collection(\"Cpu\").get().then((querySnapshot) => {\r\n            let data = [];\r\n            querySnapshot.forEach((doc) => {\r\n\r\n                data.push({\r\n                    id: doc.id,\r\n                    name: doc.data().name\r\n                })\r\n                setCpu(data)\r\n            });\r\n            console.log(cpu)\r\n        });\r\n\r\n    }, [])\r\n\r\n    const registro = React.useCallback(async () => {\r\n        try {\r\n            let imageArray = [];\r\n            let storageRef = firebase.storage();\r\n            console.log(imagens)\r\n            /* console.log(imagen) */\r\n            for (let index = 0; index < imagens.length; index++) {\r\n                const newRef = storageRef.ref('images/' + formState.name.toLowerCase()).child(imagens[index].name); // nombre del archivo\r\n                await newRef.put(imagens[index]);\r\n                let urlImagen = await newRef.getDownloadURL()\r\n                console.log('la ul de la imagen es' + urlImagen);\r\n                imageArray.push(urlImagen);\r\n\r\n            }\r\n            console.log(imageArray)\r\n\r\n            const newRef = storageRef.ref('images/' + formState.name.toLowerCase()).child(imagen.name); // nombre del archivo\r\n            await newRef.put(imagen);\r\n            let urlImagen = await newRef.getDownloadURL()\r\n            /*  console.log('la ul de la imagen es' + urlImagen); */\r\n            console.log(formState)\r\n\r\n\r\n            let nameS = formState.name.toLowerCase()\r\n            let plataformURL2 = \"\"\r\n            if (formState.plataform === \"Steam\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fsteam.png?alt=media&token=d3e640ec-8776-4dfe-a67e-48229edf8fb5\"\r\n            } else if (formState.plataform === \"Epic store \") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fepic.png?alt=media&token=4156f2d0-bf76-48bb-a45f-4111ed962b16\"\r\n            } else if (formState.plataform === \"U-play\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fuplay.png?alt=media&token=d05d6c7a-8e7c-4760-a63f-02c64bf40869\"\r\n            } else if (formState.plataform === \"Battle\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fbattle.png?alt=media&token=ae9c3015-c541-457b-9384-736b765bd78a\"\r\n            } else if (formState.plataform === \"Origin\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Forigin.png?alt=media&token=2af92504-49a1-4b32-b435-017d65e33f43\"\r\n            } else {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fgog.png?alt=media&token=fccc6ccf-8fbe-4098-9961-9c9a1442936e\"\r\n            }\r\n\r\n            db.collection(\"VideoGames\").add({\r\n                name: formState.name,\r\n                nameSearch: nameS,\r\n                description: formState.description,\r\n                developer: formState.developer,\r\n                date: formState.date,\r\n                covePage: urlImagen,\r\n                requerimentsMin: {\r\n                    cpuMin: db.collection(\"Cpu\").doc(formState.cpuMin),\r\n                    ramMin: formState.ramMin,\r\n                    gpuMin: db.collection(\"Gpu\").doc(formState.gpuMin),\r\n                },\r\n                requerimentsMax: {\r\n                    cpuMax: db.collection(\"Cpu\").doc(formState.cpuMax),\r\n                    ramMax: formState.ramMax,\r\n                    gpuMax: db.collection(\"Gpu\").doc(formState.gpuMax),\r\n                },\r\n                plataform: formState.plataform,\r\n                plataformURL: plataformURL2,\r\n                imageArray,\r\n                genders,\r\n                urlVideo: formState.urlVideo,\r\n                so: formState.so,\r\n                discSpaces: formState.discSpaces,\r\n                price: formState.price,\r\n                promo: \"\",\r\n            });\r\n            console.log(formState)\r\n            /*  const res = await auth.createUserWithEmailAndPassword(formState.email, formState.password)\r\n                await db.collection('videoGames').doc(res.user.uid).set({\r\n                    email: res.user.email,\r\n                    password: formState.password,\r\n                    name: formState.name,\r\n                    lastName: formState.lastName,\r\n                    date: formState.date,\r\n                    country: formState.country,\r\n                    nickname: ''\r\n                });  */\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [imagen, formState, imagens])\r\n\r\n    return (\r\n        <div className=\"formulario\">\r\n\r\n            <div className=\"game-form\">\r\n                <form className={classes.root} onSubmit={handleSubmit(onSubmit)} id=\"formulario\" >\r\n                    <div className=\"formulario2222\">\r\n\r\n                        <div className=\"spaceForm\">\r\n                            <h2 className=\"tituloForm\">Info general</h2>\r\n\r\n                            <TextField label=\"Nombre\" name=\"name\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField id=\"standard-multiline-static\" label=\"Description\" name=\"description\" rows={4}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"Developer\" name=\"developer\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n\r\n                            <label className=\"file\" id=\"src-file1\">imagen de portadas\r\n                                <input onChange={changeImagen}\r\n                                    name=\"src-file1\"\r\n                                    type=\"file\"\r\n                                    name=\"imageOne\"\r\n                                ></input>\r\n                            </label>\r\n                            <br />\r\n                            <br />\r\n                            <label className=\"file\">imagenasondoasugkbdas\r\n                                <input onChange={changeImagens}\r\n                                    type=\"file\"\r\n                                    name=\"images\"\r\n                                    multiple\r\n                                ></input>\r\n                            </label>\r\n                            <br />\r\n\r\n                            <TextField label=\"PLataforma\" name=\"plataform\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"Url video\" name=\"urlVideo\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n\r\n                            <TextField label=\"sistema operativo\" name=\"so\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"espacio\" name=\"discSpaces\"\r\n                                ref={register}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"Precio\" name=\"price\"\r\n                                step=\"0.01\"\r\n                                ref={register}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <br />\r\n\r\n                            <label className=\"labelForm\" id=\"date\">Fecha de salida\r\n                                <input className=\"inputForm\"\r\n                                    onChange={handleChange} type=\"date\"\r\n                                    name=\"date\"\r\n                                    ref={register({\r\n                                    })}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n\r\n\r\n                        </div>\r\n                        <div className=\"spaceForm requisitos\">\r\n\r\n                            <div>\r\n                                <h2 className=\"tituloForm\"> Minimos</h2>\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Cpu Min</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"cpuMin\"\r\n                                >\r\n                                    <option select value=\"\"  ></option>\r\n                                    {cpu.map(cpu => {\r\n                                        return (\r\n                                            <option key={cpu.id.toLowerCase() + 1} value={cpu.id}>{cpu.name}</option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                                <br />\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Gpu Min</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"gpuMin\"\r\n                                >\r\n                                    <option value=\"\" select ></option>\r\n                                    {gpu.map(gpu => {\r\n                                        return (\r\n                                            <option key={gpu.id + 1} value={gpu.id}>{gpu.name}</option>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </Select>\r\n                                <br />\r\n\r\n                                <TextField label=\"RamMin\" name=\"ramMin\"\r\n                                    onChange={handleChange}\r\n                                    ref={register}\r\n                                />\r\n                                <br />\r\n\r\n                            </div>\r\n                            <div>\r\n                                <h2 className=\"tituloForm\"> Recomendados</h2>\r\n\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Cpu Max</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"cpuMax\"\r\n                                >\r\n                                    <option value=\"\" select ></option>\r\n                                    {cpu.map(cpu => {\r\n                                        return (\r\n                                            <option key={cpu.id} value={cpu.id}>{cpu.name}</option>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </Select>\r\n                                <br />\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Gpi Max</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"gpuMax\"\r\n                                >\r\n                                    <option value=\"\" select ></option>\r\n                                    {gpu.map(gpu => {\r\n                                        return (\r\n                                            <option key={gpu.id} value={gpu.id}>{gpu.name}</option>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </ Select>\r\n                                <br />\r\n\r\n                                <TextField label=\"RamMax\" name=\"ramMax\"\r\n                                    onChange={handleChange}\r\n                                    ref={register}\r\n                                />\r\n                                <br />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"spaceForm\">\r\n                            <div className=\"generosGames\">\r\n                                {genders2.map(gender => {\r\n                                    return (\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox style={{ color: \"#ac4caf\" }} key={gender + 1} value={gender} checked={state.checkedA} onChange={onChangeFavorite} name=\"gender\" ref={register} />}\r\n                                            label={<Typography style={{ color: 'rgb(184, 180, 180)' }}>{gender}</Typography>}\r\n\r\n                                        />\r\n\r\n                                    )\r\n\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <Grid\r\n                        container\r\n\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <button className=\"btn\" type=\"submit\" >registrarse</button>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default NewGame;\r\n\r\n\r\n\r\n","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\Profile.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\Navbar.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\Register.js",["126","127"],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\Login.js",["128","129"],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\Bar.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\Destacados.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\ProductsName.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\Producst.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\Carrito.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\hooks\\useQuery.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\GpuFomr\\GpuFomr.js",["130","131"],"import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\nimport \"./GpuFomr.css\";\r\nimport { db } from '../FireBase/Firebase'\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from 'firebase/app';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    \"& .MuiOutlinedInput-input\": {\r\n      color: \"white\"\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      color: 'white',\r\n    },\r\n    \"& .MuiInputLabel-root\": {\r\n      color: \"rgb(184, 180, 180)\"\r\n    },\r\n    \"& .MuiInputLabel-root.Mui-focused\": {\r\n      color: \"purple\"\r\n    },\r\n\r\n    '& .MuiInput-underline:before': {\r\n      borderBottomColor: 'rgb(184, 180, 180)',\r\n    },\r\n\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#ac4caf',\r\n    },\r\n\r\n\r\n\r\n  },\r\n}));\r\n\r\n\r\nconst GpuFomr = props => {\r\n  const classes = useStyles();\r\n\r\n  const { register, /* errors, */ handleSubmit } = useForm({});\r\n\r\n\r\n\r\n  const [formState, setFormState] = useState();\r\n  const handleChange = event => {\r\n    setFormState({\r\n      ...formState,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n\r\n  const onSubmit = async data => {\r\n    registro();\r\n  };\r\n\r\n\r\n\r\n  const registro = React.useCallback(async () => {\r\n    try {\r\n      console.log(formState)\r\n      db.collection(\"Gpu\").add({\r\n        name: formState.name,\r\n        marca: formState.marca,\r\n        modelo: formState.modelo,\r\n        ram: parseFloat(formState.ram),\r\n        tdp: parseFloat(formState.tdp),\r\n        transistores: parseFloat (formState.transistores),\r\n        semiConductores: parseFloat (formState.semiConductores),\r\n        pciExpress: parseFloat (formState.pciExpress),\r\n        velocidadRProcesador: parseFloat (formState.velocidadRProcesador),\r\n        indiceDePixeles: parseFloat (formState.indiceDePixeles),\r\n        puntoFlotante: parseFloat (formState.puntoFlotante),\r\n        indiceTextura: parseFloat (formState.indiceTextura),\r\n        velocidadMemoriaGpu: parseFloat (formState.velocidadMemoriaGpu),\r\n        unidadesDeTonalidad: parseFloat (formState.unidadesDeTonalidad),\r\n        velocidadMemoriaEfectiva: parseFloat (formState.velocidadMemoriaEfectiva),\r\n        memoriaMaximaAnchoBanda: parseFloat (formState.memoriaMaximaAnchoBanda),\r\n        capacidadBus: parseFloat (formState.capacidadBus),\r\n        memoriaGDD: parseFloat (formState.memoriaGDD),\r\n        turboGpu: parseFloat (formState.turboGpu),\r\n        tmus: parseFloat (formState.tmus),\r\n        rops: parseFloat (formState.rops),\r\n\r\n\r\n\r\n\r\n\r\n\r\n      });\r\n      console.log(formState)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [formState])\r\n\r\n  return (\r\n    <div className=\"formulario\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <div className=\"log-form\">\r\n          <form className={classes.root} onSubmit={handleSubmit(onSubmit)} id=\"formulario\" >\r\n\r\n            <TextField label=\"Nombre\" name=\"name\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n\r\n            <TextField label=\"Marca\" name=\"marca\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Modelo\" name=\"modelo\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Tdp\" name=\"tdp\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n\r\n\r\n\r\n\r\n            <TextField label=\"Transistores\" name=\"transistores\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"SemiConductores\" name=\"semiConductores\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"Pci Express\" name=\"pciExpress\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"Velocidad Reloc Procesador\" name=\"velocidadRProcesador\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"Indice De Pixeles\" name=\"indiceDePixeles\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n            <TextField label=\"Punto Flotante\" name=\"puntoFlotante\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n            <TextField label=\"Velocidad Memoria Gpu\" name=\"velocidadMemoriaGpu\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Indice Textura\" name=\"indiceTextura\"\r\n              step=\"0.01\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <br />\r\n\r\n\r\n\r\n            <TextField label=\"Unidades De Tonalidad\" name=\"unidadesDeTonalidad\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"unidades de mapeo\" name=\"tmus\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Turbo Gpu\" name=\"turboGpu\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Unidades Generacion Salida\" name=\"rops\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            \r\n\r\n            <TextField label=\"Velocidad Memoria Efectiva\" name=\"velocidadMemoriaEfectiva\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Memoria Maxima de Ancho Banda\" name=\"memoriaMaximaAnchoBanda\"\r\n              step=\"0.01\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Ram\" name=\"ram\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"capacidad del Bus\" name=\"capacidadBus\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Memoria GDD\" name=\"memoriaGDD\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <button className=\"btn\" type=\"submit\" >registrarse</button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GpuFomr;","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\CpuForm\\CpuForm.js",["132","133"],"import React from \"react\";\r\nimport \"./CpuForm.css\";\r\nimport { useState, useEffect } from 'react';\r\nimport { db } from '../FireBase/Firebase'\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from 'firebase/app';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    \"& .MuiOutlinedInput-input\": {\r\n      color: \"white\"\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      color: 'white',\r\n    },\r\n    \"& .MuiInputLabel-root\": {\r\n      color: \"rgb(184, 180, 180)\"\r\n    },\r\n    \"& .MuiInputLabel-root.Mui-focused\": {\r\n      color: \"purple\"\r\n    },\r\n\r\n    '& .MuiInput-underline:before': {\r\n      borderBottomColor: 'rgb(184, 180, 180)',\r\n    },\r\n\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#ac4caf',\r\n    },\r\n\r\n\r\n\r\n  },\r\n}));\r\n\r\n\r\nconst CpuForm = props => {\r\n  const classes = useStyles();\r\n\r\n  const { register, /* errors, */ handleSubmit } = useForm({});\r\n\r\n\r\n\r\n  const [formState, setFormState] = useState();\r\n  const handleChange = event => {\r\n    setFormState({\r\n      ...formState,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n\r\n  const onSubmit = async data => {\r\n    registro();\r\n  };\r\n\r\n\r\n\r\n  const registro = React.useCallback(async () => {\r\n    try {\r\n      console.log(formState)\r\n      db.collection(\"Cpu\").add({\r\n        name: formState.name,\r\n        marca: formState.marca,\r\n        modelo: formState.modelo,\r\n\r\n        tdp: parseFloat(formState.tdp),\r\n        semiConductores: parseFloat(formState.semiConductores),\r\n        velocidadRProcesadorTurbo: parseFloat(formState.velocidadRProcesadorTurbo),\r\n        directx: parseFloat (formState.directx),\r\n        turboGPU: parseFloat (formState.turboGPU),\r\n        opencl: parseFloat (formState.opencl),\r\n        opengl: parseFloat (formState.opengl),\r\n        velocidadGPU: parseFloat (formState.velocidadGPU),\r\n        hilos: parseFloat (formState.hilos),\r\n        cachel2: parseFloat (formState.cachel2),\r\n        cachel3: parseFloat (formState.cachel3),\r\n        cachel1: parseFloat (formState.cachel1),\r\n        multiplicadorR: parseFloat (formState.multiplicadorR),\r\n        nucleol3: parseFloat (formState.nucleol3),\r\n        nucleol2: parseFloat (formState.nucleol2),\r\n        velocidadMemoriaRam: parseFloat (formState.velocidadMemoriaRam),\r\n        memoriaMaximaAnchoBanda: parseFloat (formState.memoriaMaximaAnchoBanda),\r\n        canalesMemoria: parseFloat (formState.canalesMemoria),\r\n        tamañoDeMemoria: parseFloat (formState.tamañoDeMemoria),\r\n        trasferencias: parseFloat (formState.trasferencias),\r\n        velocidadRprocesador: parseFloat (formState.VelocidadRprocesador),\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      });\r\n      console.log(formState)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [formState])\r\n\r\n  return (\r\n    <div className=\"formulario\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <div className=\"log-form\">\r\n          <form className={classes.root} onSubmit={handleSubmit(onSubmit)} id=\"formulario\" >\r\n\r\n            <TextField label=\"Nombre\" name=\"name\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n\r\n            <TextField label=\"Marca\" name=\"marca\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Modelo\" name=\"modelo\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n            <br />\r\n            <TextField label=\"SemiConductores\" name=\"semiConductores\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n\r\n            <TextField label=\"Velocidad Reloc Procesador\" name=\"VelocidadRprocesador\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n\r\n            <br />\r\n            <TextField label=\"Directx\" name=\"directx\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n\r\n            <br />\r\n            <TextField label=\"Turbo Gpu\" name=\"turboGPU\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"Version OPENCL\" name=\"opencl\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"Potencia de diseño terminco(TDP)\" name=\"tdp\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Version OPENCL\" name=\"opengl\"\r\n              onChange={handleChange}\r\n              step=\"0.01\"\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"velocidad Gpu\" name=\"velocidadGPU\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"Hilos de la Gpu\" name=\"hilos\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n\r\n            <br />\r\n            <TextField label=\"Velocidada Reloc procesador turbo\" name=\"velocidadRProcesadorTurbo\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n            <TextField label=\"Cache l2\" name=\"cachel2\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n            <TextField label=\"Cache l1\" name=\"cachel1\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"multipicador de Reloc\" name=\"multiplicadorR\"\r\n              step=\"0.01\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <br />\r\n\r\n            <TextField label=\"Cache L3\" name=\"cachel3\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Nucleo L3\" name=\"nucleol3\"\r\n              step=\"0.01\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Nucleo L2\" name=\"nucleol2\"\r\n              step=\"0.01\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n\r\n            <TextField label=\"Velocidad Memoria Ram\" name=\"velocidadMemoriaRam\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Memoria Maxima de Ancho Banda\" name=\"memoriaMaximaAnchoBanda\"\r\n              step=\"0.01\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Canales de memoria\" name=\"canalesMemoria\"\r\n              onChange={handleChange}\r\n              ref={register}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Tamaño de memoria maxima\" name=\"tamañoDeMemoria\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField label=\"Tasa de trasferencias Bus\" name=\"tasaTrasferenciaBus\"\r\n              ref={register}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <button className=\"btn\" type=\"submit\" >registrarse</button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CpuForm;",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":181,"column":8,"nodeType":"140","endLine":181,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":302,"column":37,"nodeType":"144","endLine":302,"endColumn":52},{"ruleId":"145","severity":1,"message":"146","line":17,"column":10,"nodeType":"147","messageId":"148","endLine":17,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":53,"column":7,"nodeType":"147","messageId":"148","endLine":53,"endColumn":12},{"ruleId":"145","severity":1,"message":"146","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":43,"column":7,"nodeType":"147","messageId":"148","endLine":43,"endColumn":12},{"ruleId":"145","severity":1,"message":"150","line":2,"column":20,"nodeType":"147","messageId":"148","endLine":2,"endColumn":29},{"ruleId":"145","severity":1,"message":"151","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":16},{"ruleId":"145","severity":1,"message":"150","line":3,"column":20,"nodeType":"147","messageId":"148","endLine":3,"endColumn":29},{"ruleId":"145","severity":1,"message":"151","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":16},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cpu' and 'gpu'. Either include them or remove the dependency array.","ArrayExpression",["154"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","'useEffect' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [cpu, gpu]",{"range":"157","text":"158"},[4752,4754],"[cpu, gpu]"]