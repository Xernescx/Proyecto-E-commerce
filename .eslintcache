[{"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\index.js":"1","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\reportWebVitals.js":"2","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\App.js":"3","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\FireBase\\Firebase.js":"4","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\index.js":"5","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\index.js":"6","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\index.js":"7","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\index.js":"8","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\index.js":"9","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\index.js":"10","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\Footer.js":"11","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\NewGame.js":"12","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\Profile.js":"13","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\Navbar.js":"14","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\Register.js":"15","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\Login.js":"16","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\index.js":"17","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\Bar.js":"18","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\index.js":"19","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\Destacados.js":"20","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\index.js":"21","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\ProductsName.js":"22","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\index.js":"23","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\Producst.js":"24","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\index.js":"25","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\Carrito.js":"26","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\hooks\\useQuery.js":"27","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\GpuFomr\\GpuFomr.js":"28","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\CpuForm\\CpuForm.js":"29","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Tabla\\index.js":"30","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Tabla\\Tabla.js":"31","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\TablaPedidos\\index.js":"32","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\TablaPedidos\\TablaPedidos.js":"33"},{"size":500,"mtime":1611827105765,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":2662,"mtime":1622734451594,"results":"37","hashOfConfig":"35"},{"size":747,"mtime":1621431103736,"results":"38","hashOfConfig":"35"},{"size":36,"mtime":1612098001347,"results":"39","hashOfConfig":"35"},{"size":33,"mtime":1612773145065,"results":"40","hashOfConfig":"35"},{"size":36,"mtime":1612098001393,"results":"41","hashOfConfig":"35"},{"size":36,"mtime":1612772778960,"results":"42","hashOfConfig":"35"},{"size":35,"mtime":1614154781712,"results":"43","hashOfConfig":"35"},{"size":35,"mtime":1614597776841,"results":"44","hashOfConfig":"35"},{"size":249,"mtime":1622759685147,"results":"45","hashOfConfig":"35"},{"size":19223,"mtime":1622736449937,"results":"46","hashOfConfig":"35"},{"size":36602,"mtime":1622630185728,"results":"47","hashOfConfig":"35"},{"size":12799,"mtime":1622734546595,"results":"48","hashOfConfig":"35"},{"size":28246,"mtime":1622792916370,"results":"49","hashOfConfig":"35"},{"size":6370,"mtime":1622629715534,"results":"50","hashOfConfig":"35"},{"size":31,"mtime":1612171032548,"results":"51","hashOfConfig":"35"},{"size":4682,"mtime":1620633960312,"results":"52","hashOfConfig":"35"},{"size":38,"mtime":1614972141450,"results":"53","hashOfConfig":"35"},{"size":5816,"mtime":1622759676357,"results":"54","hashOfConfig":"35"},{"size":40,"mtime":1615881770233,"results":"55","hashOfConfig":"35"},{"size":14465,"mtime":1622759765924,"results":"56","hashOfConfig":"35"},{"size":36,"mtime":1616089516427,"results":"57","hashOfConfig":"35"},{"size":15924,"mtime":1620730783157,"results":"58","hashOfConfig":"35"},{"size":35,"mtime":1616176253333,"results":"59","hashOfConfig":"35"},{"size":4901,"mtime":1621245904454,"results":"60","hashOfConfig":"35"},{"size":142,"mtime":1611217396000,"results":"61","hashOfConfig":"35"},{"size":7653,"mtime":1621336583011,"results":"62","hashOfConfig":"35"},{"size":8852,"mtime":1621336598816,"results":"63","hashOfConfig":"35"},{"size":33,"mtime":1622485270283,"results":"64","hashOfConfig":"35"},{"size":11822,"mtime":1622713490635,"results":"65","hashOfConfig":"35"},{"size":40,"mtime":1622734202594,"results":"66","hashOfConfig":"35"},{"size":6267,"mtime":1622734182385,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"17h48m7",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\index.js",[],["138","139"],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\reportWebVitals.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\App.js",["140"],"import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport './Componentes/FireBase/Firebase';\r\nimport Navbar from './Componentes/Navbar';\r\nimport Footer from './Componentes/Footer';\r\nimport Destacados from './Componentes/Destacados';\r\nimport Login from './Componentes/Login'\r\nimport Register from './Componentes/Register'\r\nimport Profile from './Componentes/Profile';\r\nimport NewGame from './Componentes/NewGame'\r\nimport ProductsName from './Componentes/ProductsName'\r\nimport Products from './Componentes/Products'\r\nimport Carrito from './Componentes/Carrito'\r\nimport Bar from './Componentes/Bar';\r\nimport GpuFomr from './Componentes/GpuFomr/GpuFomr';\r\nimport CpuForm from './Componentes/CpuForm/CpuForm';\r\nimport Tabla from './Componentes/Tabla';\r\nimport TablaPedidos from './Componentes/TablaPedidos';\r\n\r\n\r\nconst isAuthenticated = () => {\r\n  const token = window.sessionStorage.getItem(\"user\")\r\n\r\n  if (token !== undefined) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst App = () => (\r\n\r\n  <div className=\"main-container\">\r\n    <Router>\r\n      <Navbar />\r\n      <div className=\"containerBody\">\r\n        <Switch>\r\n          {/* Parte publica */}\r\n          <Route path=\"/home\" >\r\n            <Destacados />\r\n          </Route>\r\n\r\n          <Route path=\"/Login\">\r\n            <Login />\r\n          </Route>\r\n\r\n          <Route path=\"/product/:name\">\r\n            <Bar />\r\n            <ProductsName />\r\n          </Route>\r\n\r\n          <Route path=\"/search\" >\r\n            <Products />\r\n          </Route>\r\n\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n\r\n          {/* Parte usuario */}\r\n          <Route path=\"/profile\">\r\n            <Profile />\r\n          </Route>\r\n\r\n          <Route exact path=\"/car\">\r\n            <Carrito />\r\n          </Route>\r\n\r\n          <Route exact path=\"/pedidos\">\r\n            <TablaPedidos />\r\n          </Route>\r\n\r\n\r\n           {/* Parte administradro */}\r\n          <Route path=\"/newGame\">\r\n            <NewGame />\r\n          </Route>\r\n\r\n          <Route path=\"/formGpu\" >\r\n            <GpuFomr />\r\n          </Route>\r\n\r\n          <Route path=\"/formCpu\" >\r\n            <CpuForm />\r\n          </Route>\r\n\r\n          <Route path=\"/editGame:id\">\r\n            <NewGame />\r\n          </Route>\r\n\r\n          <Route path=\"/table/:variable\" >\r\n            <Tabla />\r\n          </Route>\r\n\r\n          <Route path=\"/editGame/:id\" >\r\n            <NewGame />\r\n          </Route>\r\n\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\FireBase\\Firebase.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Footer\\Footer.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\NewGame\\NewGame.js",["141"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './NewGame.css';\r\nimport { db } from '../FireBase/Firebase'\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from 'firebase/app';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\nimport { parse } from 'date-fns';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& >*': {\r\n            margin: theme.spacing(1),\r\n\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n            color: \"white\"\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white',\r\n        },\r\n        \"& .MuiInputLabel-root\": {\r\n            color: \"rgb(184, 180, 180)\"\r\n        },\r\n        \"& .MuiInputLabel-root.Mui-focused\": {\r\n            color: \"purple\"\r\n        },\r\n\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: 'rgb(184, 180, 180)',\r\n        },\r\n\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#ac4caf',\r\n        },\r\n\r\n\r\n\r\n    },\r\n    check: {\r\n        color: \"fff\",\r\n        '&$checked': {\r\n            color: \"fff\",\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst NewGame = () => {\r\n    const classes = useStyles();\r\n\r\n    const { register, /* errors, */ handleSubmit } = useForm({});\r\n\r\n    const state = {\r\n        name: '',\r\n        nameSearch: '',\r\n        description: '',\r\n        developer: '',\r\n        date: '',\r\n        requerimentsMin: {\r\n            cpuMin: '',\r\n            cpuMin2: '',\r\n            ramMin: '',\r\n            gpuMin: '',\r\n            gpuMin2: '',\r\n        },\r\n        requerimentsMax: {\r\n            cpuMax: '',\r\n            cpuMax2: '',\r\n            ramMax: '',\r\n            gpuMax: '',\r\n            gpuMax2: '',\r\n\r\n        },\r\n        so: '',\r\n        discSpaces: '',\r\n        covePage: '',\r\n        imageArray: {\r\n\r\n        },\r\n        genders: {\r\n\r\n        },\r\n        video: '',\r\n        plataform: '',\r\n        price: 0,\r\n        promo: 0,\r\n    }\r\n\r\n\r\n    const [formState, setFormState] = useState(state);\r\n    const [genders2, setGenders2] = useState([])\r\n    const [genders, setGenders] = useState([])\r\n    const [gpu, setGpu] = useState([])\r\n    const [cpu, setCpu] = useState([])\r\n    const handleChange = event => {\r\n        setFormState({\r\n            ...formState,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const [imagens, setImagens] = useState([]);\r\n    const [imagen, setImagen] = useState();\r\n\r\n    //OBTENIENDO LA IMAGEN\r\n    const changeImagen = e => {\r\n        console.log(e.target.files[0])\r\n        setImagen(e.target.files[0]);\r\n        console.log(imagen)\r\n    }\r\n\r\n    const changeImagens = e => {\r\n        console.log(e.target.files)\r\n        setImagens(e.target.files);\r\n        console.log(imagens)\r\n    }\r\n\r\n    const onSubmit = async data => {\r\n        registro();\r\n    };\r\n\r\n    const onChangeFavorite = (event) => {\r\n        console.log(event.target.checked, event.target.value);\r\n        if (event.target.checked === true) {\r\n\r\n            setGenders(genders => [...genders, event.target.value]);\r\n            /* window.history.pushState(null, \"\", event.target.value); */\r\n        } else {\r\n            var i = genders.indexOf(event.target.value);\r\n\r\n            if (i !== -1) {\r\n                genders.splice(i, 1);\r\n            }\r\n        }\r\n        console.log(genders)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\" genders\")\r\n            .orderBy(\"name\", \"asc\").get().then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    setGenders2(genders2 => [...genders2, doc.data().name])\r\n                    /* console.log(doc.data().name) */\r\n                });\r\n            })\r\n\r\n        db.collection(\"Gpu\").get().then((querySnapshot) => {\r\n            let data = [];\r\n            querySnapshot.forEach((doc) => {\r\n\r\n                data.push({\r\n                    id: doc.id,\r\n                    name: doc.data().name\r\n                })\r\n                setGpu(data)\r\n            });\r\n            /* console.log(gpu) */\r\n        });\r\n\r\n        db.collection(\"Cpu\").get().then((querySnapshot) => {\r\n            let data = [];\r\n            querySnapshot.forEach((doc) => {\r\n\r\n                data.push({\r\n                    id: doc.id,\r\n                    name: doc.data().name\r\n                })\r\n                setCpu(data)\r\n            });\r\n           /*  console.log(cpu) */\r\n        });\r\n        \r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const registro = React.useCallback(async () => {\r\n        console.log(genders)\r\n        try {   \r\n            let imageArray = [];\r\n\r\n            let storageRef = firebase.storage();\r\n\r\n\r\n            console.log(imagens)\r\n            /* console.log(imagen) */\r\n            for (let index = 0; index < imagens.length; index++) {\r\n                const newRef = storageRef.ref('images/' + formState.name.toLowerCase()).child(imagens[index].name); // nombre del archivo\r\n                await newRef.put(imagens[index]);\r\n                let urlImagen = await newRef.getDownloadURL()\r\n                console.log('la ul de la imagen es' + urlImagen);\r\n                imageArray.push(urlImagen);\r\n\r\n            }\r\n\r\n\r\n            const newRef = storageRef.ref('images/' + formState.name.toLowerCase()).child(imagen.name); // nombre del archivo\r\n            await newRef.put(imagen);\r\n            let urlImagen = await newRef.getDownloadURL()\r\n            /*  console.log('la ul de la imagen es' + urlImagen); */\r\n            console.log(formState.genders)\r\n\r\n\r\n            let nameS = formState.name.toLowerCase()\r\n            let plataformURL2 = \"\"\r\n            if (formState.plataform === \"Steam\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fsteam.png?alt=media&token=d3e640ec-8776-4dfe-a67e-48229edf8fb5\"\r\n            } else if (formState.plataform === \"Epic store \") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fepic.png?alt=media&token=4156f2d0-bf76-48bb-a45f-4111ed962b16\"\r\n            } else if (formState.plataform === \"U-play\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fuplay.png?alt=media&token=d05d6c7a-8e7c-4760-a63f-02c64bf40869\"\r\n            } else if (formState.plataform === \"Battle\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fbattle.png?alt=media&token=ae9c3015-c541-457b-9384-736b765bd78a\"\r\n            } else if (formState.plataform === \"Origin\") {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Forigin.png?alt=media&token=2af92504-49a1-4b32-b435-017d65e33f43\"\r\n            } else {\r\n                plataformURL2 = \"https://firebasestorage.googleapis.com/v0/b/proyectoreact-8ff3e.appspot.com/o/Plataformas%2Fgog.png?alt=media&token=fccc6ccf-8fbe-4098-9961-9c9a1442936e\"\r\n            }\r\n\r\n            db.collection(\"VideoGames\").add({\r\n                name: formState.name,\r\n                nameSearch: nameS,\r\n                description: formState.description,\r\n                developer: formState.developer,\r\n                date: formState.date,\r\n                covePage: urlImagen,\r\n\r\n                cpuMin: db.collection(\"Cpu\").doc(formState.cpuMin),\r\n                ramMin: parseFloat(formState.ramMin),\r\n                gpuMin: db.collection(\"Gpu\").doc(formState.gpuMin),\r\n\r\n\r\n                cpuMax: db.collection(\"Cpu\").doc(formState.cpuMax),\r\n                ramMax: parseFloat(formState.ramMax),\r\n                gpuMax: db.collection(\"Gpu\").doc(formState.gpuMax),\r\n\r\n                plataform: formState.plataform,\r\n                plataformURL: plataformURL2,\r\n                imageArray,\r\n                genders,\r\n                urlVideo: formState.urlVideo,\r\n                so: formState.so,\r\n                discSpaces: formState.discSpaces,\r\n                price: formState.price,\r\n                promo: \"\",\r\n                stock:  parseFloat(formState.stock),\r\n            });\r\n            console.log(formState)\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    })\r\n\r\n    return (\r\n        <div className=\"formulario\">\r\n\r\n            <div className=\"game-form\">\r\n                <form className={classes.root} onSubmit={handleSubmit(onSubmit)} id=\"formulario\" >\r\n                    <div className=\"formulario2222\">\r\n\r\n                        <div className=\"spaceForm\">\r\n                            <h2 className=\"tituloForm\">Info general</h2>\r\n\r\n                            <TextField label=\"Nombre\" name=\"name\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField id=\"standard-multiline-static\" label=\"Description\" name=\"description\" rows={4}\r\n                                InputLabelProps={{ shrink: true }}\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"Developer\" name=\"developer\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n\r\n                            <label className=\"file\" id=\"src-file1\">imagen de portada\r\n                                <input onChange={changeImagen}\r\n                                    name=\"src-file1\"\r\n                                    type=\"file\"\r\n                                    // eslint-disable-next-line react/jsx-no-duplicate-props\r\n                                    name=\"covePage\"\r\n                                ></input>\r\n                            </label>\r\n                            <br />\r\n                            <br />\r\n                            <label className=\"file\">Imagenes\r\n                                <input onChange={changeImagens}\r\n                                    type=\"file\"\r\n                                    name=\"images\"\r\n                                    multiple\r\n                                ></input>\r\n                            </label>\r\n                            <br />\r\n\r\n                            <TextField label=\"PLataforma\" name=\"plataform\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"Url video\" name=\"urlVideo\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n\r\n                            <TextField label=\"sistema operativo\" name=\"so\"\r\n                                onChange={handleChange}\r\n                                ref={register}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"espacio\" name=\"discSpaces\"\r\n                                ref={register}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"Precio\" name=\"price\"\r\n                                step=\"0.01\"\r\n                                ref={register}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <br />\r\n\r\n                            <TextField label=\"Stock\" name=\"stock\"\r\n                                \r\n                                ref={register}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <br />\r\n\r\n\r\n                            <label className=\"labelForm\" id=\"date\">Fecha de salida\r\n                                <input className=\"inputForm\"\r\n                                    onChange={handleChange} type=\"date\"\r\n                                    name=\"date\"\r\n                                    ref={register({\r\n                                    })}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n\r\n\r\n                        </div>\r\n                        <div className=\"spaceForm requisitos\">\r\n\r\n                            <div>\r\n                                <h2 className=\"tituloForm\"> Minimos</h2>\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Cpu Min</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"cpuMin\"\r\n                                >\r\n                                    <option select value=\"\"  ></option>\r\n                                    {cpu.map(cpu => {\r\n                                        return (\r\n                                            <option key={cpu.name.toLowerCase()} value={cpu.id}>{cpu.name}</option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                                <br />\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Gpu Min</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"gpuMin\"\r\n                                >\r\n                                    <option value=\"\" select ></option>\r\n                                    {gpu.map(gpu => {\r\n                                        return (\r\n                                            <option key={gpu.name.toLowerCase() } value={gpu.id}>{gpu.name}</option>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </Select>\r\n                                <br />\r\n\r\n                                <TextField label=\"RamMin\" name=\"ramMin\"\r\n                                    onChange={handleChange}\r\n                                    ref={register}\r\n                                />\r\n                                <br />\r\n\r\n                            </div>\r\n                            <div>\r\n                                <h2 className=\"tituloForm\"> Recomendados</h2>\r\n\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Cpu Max</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"cpuMax\"\r\n                                >\r\n                                    <option value=\"\" select ></option>\r\n                                    {cpu.map(cpu => {\r\n                                        return (\r\n                                            <option key={cpu.name} value={cpu.id}>{cpu.name}</option>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </Select>\r\n                                <br />\r\n\r\n                                <InputLabel className={classes.root} id=\"demo-simple-select-label\">Gpi Max</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    defaultValue=\"\"\r\n                                    onChange={handleChange}\r\n                                    name=\"gpuMax\"\r\n                                >\r\n                                    <option value=\"\" select ></option>\r\n                                    {gpu.map(gpu => {\r\n                                        return (\r\n                                            <option key={gpu.name} value={gpu.id}>{gpu.name}</option>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </ Select>\r\n                                <br />\r\n\r\n                                <TextField label=\"RamMax\" name=\"ramMax\"\r\n                                    onChange={handleChange}\r\n                                    ref={register}\r\n                                />\r\n                                <br />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"spaceForm\">\r\n                            <div className=\"generosGames\">\r\n                                {genders2.map(gender => {\r\n                                    return (\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox style={{ color: \"#ac4caf\" }} key={gender + 1} value={gender} onChange={onChangeFavorite} name=\"gender\" ref={register} />}\r\n                                            label={<Typography style={{ color: 'rgb(184, 180, 180)' }}>{gender}</Typography>}\r\n\r\n                                        />\r\n\r\n                                    )\r\n\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <Grid\r\n                        container\r\n\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <button className=\"btn\" type=\"submit\" >registrarse</button>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default NewGame;\r\n\r\n\r\n\r\n","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Profile\\Profile.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Navbar\\Navbar.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Register\\Register.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Login\\Login.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Bar\\Bar.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Destacados\\Destacados.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\ProductsName\\ProductsName.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Products\\Producst.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Carrito\\Carrito.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\hooks\\useQuery.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\GpuFomr\\GpuFomr.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\CpuForm\\CpuForm.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Tabla\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\Tabla\\Tabla.js",["142"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useParams } from 'react-router-dom';\r\nimport { db } from '../FireBase/Firebase'\r\nimport { createMuiTheme, Grid } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './Tabla.css'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ac4caf',\r\n        },\r\n        secondary: {\r\n            main: '#ac4caf'\r\n\r\n        }\r\n\r\n    },\r\n\r\n})\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"grey\",\r\n        color: theme.palette.common.white,\r\n\r\n    },\r\n\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        margin: \"5%\"\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\n\r\nexport default function EnhancedTable() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('calories');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [loading, setloading] = useState(true);\r\n    let tableType = useParams()\r\n\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const headCells = [\r\n        { id: 'id', label: 'ID', minWidth: 170 },\r\n        { id: 'email', label: 'Email', minWidth: 100 },\r\n        { id: 'nombre', label: 'Nombre', minWidth: 170, },\r\n        { id: 'apellido', label: 'Apellido', minWidth: 170, },\r\n        { id: 'pais', label: 'Pais', minWidth: 170, },\r\n        { id: 'role', label: 'Role', minWidth: 170, },\r\n        { id: 'boton', label: 'Admin', minWidth: 170, },\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        db.collection(\"users\").get().then((querySnapshot) => {\r\n            let row = [];\r\n            querySnapshot.forEach((doc) => {\r\n                console.log(doc);\r\n                console.log(doc.data());\r\n                row.push(createData(doc.id, doc.data().email, doc.data().name, doc.data().lastname, doc.data().country, doc.data().userType))\r\n            });\r\n            setRows(row)\r\n            setloading(false);\r\n            console.log(rows)\r\n        });\r\n\r\n        setloading(false)\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    function createData(id, email, nombre, apellido, pais, role, boton) {\r\n        if (role === \"ROLE_USER\") {\r\n            boton = <button onClick={() => setAdmin(id)} className=\"buttonAdmin\">Set Admin</button>\r\n        } else {\r\n            boton = <button onClick={() => endAdmin(id)} className=\"buttonAdmin2\">End Admin</button>\r\n        }\r\n\r\n        return { id, email, nombre, apellido, pais, role, boton };\r\n    }\r\n\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n\r\n    function EnhancedTableHead(props) {\r\n        const { classes, order, orderBy, onRequestSort } = props;\r\n        const createSortHandler = (property) => (event) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    {headCells.map((headCell) => (\r\n                        <StyledTableCell\r\n                            key={headCell.id}\r\n                            align={headCell.numeric ? 'right' : 'left'}\r\n                            padding={headCell.disablePadding ? 'none' : 'default'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                        >\r\n                            <TableSortLabel\r\n                                active={orderBy === headCell.id}\r\n                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.id)}\r\n                            >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </StyledTableCell>\r\n                    ))}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n\r\n    EnhancedTableHead.propTypes = {\r\n        classes: PropTypes.object.isRequired,\r\n        numSelected: PropTypes.number.isRequired,\r\n        onRequestSort: PropTypes.func.isRequired,\r\n        onSelectAllClick: PropTypes.func.isRequired,\r\n        order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n        orderBy: PropTypes.string.isRequired,\r\n        rowCount: PropTypes.number.isRequired,\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const setAdmin = (id) => {\r\n\r\n        db.collection(\"users\").doc(id).update({\r\n            userType: \"ROLE_ADMIN\"\r\n        }).then(() => {\r\n            console.log(\"Document successfully updated!\");\r\n        })\r\n            .catch((error) => {\r\n                // The document probably doesn't exist.\r\n                console.error(\"Error updating document: \", error);\r\n            });\r\n\r\n    }\r\n\r\n    const endAdmin = (id) => {\r\n\r\n        db.collection(\"users\").doc(id).update({\r\n            userType: \"ROLE_USER\"\r\n        }).then(() => {\r\n            console.log(\"Document successfully updated!\");\r\n        })\r\n            .catch((error) => {\r\n                // The document probably doesn't exist.\r\n                console.error(\"Error updating document: \", error);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    if (loading === true) {\r\n        return (\r\n            <div className=\"loading\">\r\n                <ThemeProvider theme={theme}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <div>\r\n                            <CircularProgress theme={theme} />\r\n                        </div>\r\n                    </Grid>\r\n                </ThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n\r\n                                            <TableCell >{row.id}</TableCell>\r\n                                            <TableCell >{row.email}</TableCell>\r\n                                            <TableCell >{row.nombre}</TableCell>\r\n                                            <TableCell >{row.apellido}</TableCell>\r\n                                            <TableCell >{row.pais}</TableCell>\r\n                                            <TableCell >{row.role}</TableCell>\r\n                                            <TableCell >{row.boton}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\TablaPedidos\\index.js",[],"D:\\Miscosas\\Estudios\\wep\\JavaS\\react\\proyecto1\\src\\Componentes\\TablaPedidos\\TablaPedidos.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":26,"column":7,"nodeType":"149","messageId":"150","endLine":26,"endColumn":22},{"ruleId":"147","severity":1,"message":"151","line":15,"column":10,"nodeType":"149","messageId":"150","endLine":15,"endColumn":15},{"ruleId":"147","severity":1,"message":"152","line":79,"column":9,"nodeType":"149","messageId":"150","endLine":79,"endColumn":18},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'parse' is defined but never used.","'tableType' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]